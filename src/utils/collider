const left = (mesh, divide = 1) => mesh.position.x - mesh.geometry.parameters.width / 2 / divide
const right = (mesh, divide = 1) => mesh.position.x + mesh.geometry.parameters.width / 2 / divide
const top = (mesh, divide = 1) => mesh.position.y - mesh.geometry.parameters.height / 2 / divide
const bottom = (mesh, divide = 1) => mesh.position.y + mesh.geometry.parameters.height / 2 / divide
const halfHeight = mesh => mesh.geometry.parameters.height / 2
const halfWidth = mesh => mesh.geometry.parameters.width / 2
function isColliding(r1, r2) {
	if (
		left(r1) > right(r2) ||
		top(r1) > bottom(r2) ||
		right(r1) < left(r2) ||
		bottom(r1) < top(r2)
	) return false

	return true
}
const collide = {
	top: (r1, r2) => bottom(r1) > top(r2) && top(r1) < top(r2) && r2.position.x > left(r1) && r2.position.x < right(r1),
	bottom: (r1, r2) => top(r1) < bottom(r2) && bottom(r1) > bottom(r2) && r2.position.x > left(r1) && r2.position.x < right(r1),
	left: (r1, r2) => left(r1) < right(r2) && right(r1) > right(r2) && r2.position.y > top(r1) && r2.position.y < bottom(r1),
	right: (r1, r2) => right(r1) > left(r2) && left(r1) < left(r2) && r2.position.y > top(r1) && r2.position.y < bottom(r1),
}

function collideRect(r1, r2) {

	if (collide.top(r1.mesh, r2)) {
		r1.mesh.position.y = r2.position.y - halfHeight(r2) - halfHeight(r1.mesh)
		r1.velocity.y = 0
		return true
	}
	if (collide.bottom(r1.mesh, r2)) {
		r1.mesh.position.y = r2.position.y + halfHeight(r2) + halfHeight(r1.mesh)
		r1.velocity.y = 0
		return true
	}
	if (collide.left(r1.mesh, r2)) {
		r1.mesh.position.x = r2.position.x + halfWidth(r2) + halfWidth(r1.mesh)
		r1.velocity.x = 0
		return true

	}
	if (collide.right(r1.mesh, r2)) {
		r1.mesh.position.x = r2.position.x - halfWidth(r2) - halfWidth(r1.mesh)
		r1.velocity.x = 0
		return true
	}

	return false
}
export { isColliding, collideRect }